--ПОДГОТОВКА К ВЕРТСКЕ
  1. Нарезать картинки
     1.1 Векторная графика в формате .svg
     1.2 Растровая графика в формате .png или .jpeg
     1.3 Иконки в папку Icons
     1.4 Иконки для создания спрайта css в папку Sprite/png
     1.5 Иконки для создания svg спрайта в папку Sprite/svg
     1.7 Изображения во всех форматах должны иметь меньшие по размеру дубли с приставками -middle и -small (image-middle.jpg, image-small.webp), кроме иконок
     1.8 Изображения во всех форматах должны иметь дубли в 2 и 3 раза больше с суфиксом @2 и @3 (image@2.webp, image@3.png)
 
  2. Скачать шрифты
  3. Создать переменные в файле _variables.sass
  4. Подключить необходимые CSS библиотеки в файле _libs.sass
  5. Загрузить jpeg изображения сайта в папку проекта layout

--ПОДКЛЮЧЕНИЕ ШРИФТОВ
  1. Сконвертировать шрифты в формате woff2, woff
  2. Выгрузить сконвертированные шрифты в папку проекта fonts
  3. Внести название шрифтов в файл _variables.sass
  4. Поставить шрифты на предзагрузку в файле _head.jade
  5. Подключить необходимые шрифты в файле _fonts.sass
  6. Установить font-display
  5. Внести название шрифтов в файле webfont-loaded.js
  6. Настроить системные шрифты в _variables.sass (они должны быть похожи на подключенные)
  7. Настроить letter-spacing у шрифтов (Ширина текста должна быть одинаковая)
  8. При верстке шрифты подключать через css классы (f1-R, f1-B, f2-R и т.д.)

--ЗАПУСК ПРОЕКТА
  1. Разместить стартовый шаблон в папку проекта
  2. Создать package.json (npm init/yarn init)
  3. Установить плагины из файла gulp plugins.txt
  4. Запустить gulp

--ПОДКЛЮЧЕНИЕ ИКОНОК
  1. Создание спрайта CSS (только для HTTP/1.x)
     1.1 Выгрузить иконки .jpg и .png в img/Sprite
     1.2 Ввести в команд. строку команду gulp sprite
     1.3 Подключить sprite.sass в файле _libs.sass
     1.4 Настроить переменные в файле _icons.sass (раскоментировать и заменить iconName на названия иконок)
  2. Создание SVG спрайта
     2.1 Поместить svg файлы в папку img/SVG
     2.2 Запусть gulp svg
     2.3 У тега svg в файле symbols.svg ставим display: none (img/Sprite/svg/symbols.svg)
     2.4 В html вставляем <svg class="">
				<use xlink:href="#IconName" />
			  </svg>
     2.5 Тегу svg в коде html задаем размеры
  3. Шрифтовые иконки
     3.1 

--ПОДКЛЮЧЕНИЕ СКРИПТОВ
  1. Подключить CSS библиотеку в файле sass/_libs.sass
  2. Подключить JS библиотеку в файле gulpfile.js (таск - Конкатинация JS файлов)
  3. Управлять скриптом в файле js/common.js


--ВЕРТСКА
  1. Открыть FireFox включить ремим адаптивного дизайна
  2. Включить плагин pixel perfect
  3. Настроить систему сеток
     3.1 Bootstrap 4
         3.1.1 Открыть файл _variables.scss (libs/bootstrap/scss/)
         3.1.2 Установить ширину контейнера + 15px ($container-max-widths)
         3.1.3 Установить ширину контрольной точки ($grid-breakpoints)
         3.1.4 Установить растояние между колонками ($grid-gutter-width)
  4. Верстать

--СОЗДАНИЕ СТРАНИЦ
  1. Создать папку с файлами в папке page-contents по образцу (sample).
  2. В gulpfile подключить jade файл и sass файл (общий).
  3. В style.sass подключить sass файл (контент).

--ОПТИМИЗАЦИЯ ПОД МОБИЛЬНЫЕ
  1. Использовать sass mixin: +media-breakpoint-between(xs,xl)

--ОПТИМИЗАЦИЯ ПОД INTERNET EXPLORER
  1. Использовать: @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none)

--ВЕРСТКА ИЗОБРАЖЕНИЙ
  -  У изображений должны быть дубли меньшего размера для маленьких экранов и большего для мониторов большей плотности
  -  Все изображения должны быть в теге <picture>
  1. С использование плагина LazyLoad
     1.1 К тегу img добавлять класс lazy
     1.2 Вместо src использовать data-src
     1.3 Вместо srcset использовать data-srcset
     1.4 Смотреть шаблон в папке plugins/LazyLoad Webp/LazyLoad Webp.jade
  2. Без плагина
     2.1 Делать по шаблону в папке _sections-template/_picture/picture.jade
  3. Верстка через CSS 
     3.1 Делать по шаблону в папке _sections-template/_picture/picture.sass